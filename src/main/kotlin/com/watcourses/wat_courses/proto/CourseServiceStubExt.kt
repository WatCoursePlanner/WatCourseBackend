package com.watcourses.wat_courses.proto

import io.rouz.grpc.*
import com.watcourses.wat_courses.proto.CourseServiceGrpc.CourseServiceStub

import kotlinx.coroutines.channels.ReceiveChannel
import kotlin.coroutines.suspendCoroutine

import io.grpc.Metadata
import io.grpc.stub.MetadataUtils

/**
 * Kotlin extension functions for [com.watcourses.wat_courses.proto.CourseServiceGrpc.CourseServiceStub]
 *
 * Generated by gRPC Kotlin generator
 * Source: grpc.proto
 */




suspend inline fun CourseServiceStub.getCourseInfo(request: com.watcourses.wat_courses.proto.Grpc.CourseInfoRequest): com.watcourses.wat_courses.proto.Courses.CourseInfo {
    return suspendCoroutine {
        getCourseInfo(request, ContinuationStreamObserver(it))
    }
}

/**
* Adds new binary header and returns the client
*/
fun CourseServiceStub.addBinaryHeader(
    header: String,
    bytes: ByteArray
): CourseServiceStub {
    val headers = Metadata()
    val key = Metadata.Key.of(header, Metadata.BINARY_BYTE_MARSHALLER)
    headers.put(key, bytes)

    return MetadataUtils.attachHeaders(this, headers)
}
