// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: courses.proto
import com.squareup.wire.EnumAdapter
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.WireEnum
import kotlin.Int
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

enum class Term(
  override val value: Int
) : WireEnum {
  SPRING(0),

  WINTER(1),

  FALL(2);

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<Term> = object : EnumAdapter<Term>(
      Term::class
    ) {
      override fun fromValue(value: Int): Term? = Term.fromValue(value)
    }

    @JvmStatic
    fun fromValue(value: Int): Term? = when (value) {
      0 -> SPRING
      1 -> WINTER
      2 -> FALL
      else -> null
    }
  }
}
